import pandas as pd
import os

import progress as pb
import global_var as gv

def read_dat_files(self):
        tmp_dir = os.path.join(self.environment,gv.cve_dir)
        dat_dir = os.path.join(tmp_dir,gv.dat_store)
        cve_db = gv.cve_database
        
        db_conn = self.db_obj.get_connection()
        ## init progress bar widget as a toplevel window
        progress_bar = pb.Progress(self)
        
        ## get a list of files
        file_list = os.listdir(dat_dir)
        
        session_date = ""
        for file_line in file_list:
            progress_bar.update_pb()

            ## extract session id from filename
            sid_list = file_line.split('_') # team id is element one
            dat_file = os.path.join(dat_dir,file_line)
            ## open each file
            with open(dat_file,'r') as fd:
                ## read each line and parse into a list
                index = 0
                for line in fd:
                    df_dict = {}
                    ## replace any "" elements with "None"
                    ## And split elements based on '|' separator
                    data = line.replace('\"\"','"None"').split("|")

                    ## first line (index=0) has column names
                    ## second line (index=1) has data 
                    if index == 1: 
                        ## column 2 (element 1) is the session date
                        session_date = data[1]
                    elif index > 3:
                        ## add the session date to the list
                        data.append(session_date)
                        ## add session id to the list
                        data.append(sid_list[1])
                        
                        ## need to convert list into dictionary
                        ##
                        stopping = len(data)
                        x = 0
                        while x < stopping:
                            ## with each element, start with an empty list
                            tmp_lst = []
                            ## check for a string ending in '\n'
                            ## If exists, strip off the '\n' character
                            if data[x].endswith('\n'):
                                y = data[x].rstrip(data[x][-1])
                                data[x] = y
                            ## use the list.append() to correctly add the elements
                            tmp_lst.append(data[x])

                            ## add a new key:data pair to the dictionary
                            ## based on the index into the list 'dat_cols'
                            ## substitute the field name and assign the data point
                            df_dict.update({gv.dat_cols[x]:tmp_lst})
                            x += 1
                        
                        ## create a pandas dataframe for import into database
                        dat_df = pd.DataFrame(df_dict, columns=gv.dat_cols)
                        
                        ## save only designated columns of data
                        dat_df[gv.data_cols].to_sql('applicant', con=db_conn, if_exists='append', index=False)
                        
                    index += 1

            ## remove the file after importing the data
            os.remove(dat_file)
        progress_bar.close()
        self.refresh_screen()